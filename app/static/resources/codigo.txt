#----------------------------------------------- Usuarios -----------------------------------------------

class Usuario(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='usuario')
    rol = models.CharField(max_length=1, choices=Roles, default='1', verbose_name='Rol de usuario')
    nombres = models.CharField(max_length=100, validators=[MinLengthValidator(3), validate_nombre], verbose_name='Nombres')
    tipo_documento = models.CharField(max_length=3, choices=Tipo_Documento_Choices, default='CC', verbose_name='Tipo de Documento')
    numero_documento = models.CharField(max_length=10, validators=[MinLengthValidator(8), RegexValidator(regex=r'^\d+$', message='El número de documento debe contener solo dígitos.')], verbose_name='Número de Documento', null=True, blank=True)
    correo = models.EmailField(max_length=50, validators=[EmailValidator()], verbose_name='Correo')
    telefono = models.CharField(max_length=10, validators=[MinLengthValidator(8), RegexValidator(regex=r'^\d+$', message='El número de celular debe contener solo dígitos.')], verbose_name='Número de celular', null=True, blank=True)
    usuario = models.CharField(max_length=20, unique=True, verbose_name='Usuario')
    password = models.CharField(max_length=20, verbose_name='Contraseña')

    def __str__(self):
        return f'{self.nombres}'

    class Meta:
        verbose_name = 'Usuario'
        verbose_name_plural = 'Usuarios'
        db_table = 'usuario'
        ordering = ['id']